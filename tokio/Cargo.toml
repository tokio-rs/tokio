[package]
name = "tokio"
# When releasing to crates.io:
# - Remove path dependencies
# - Update doc url
#   - README.md
# - Update CHANGELOG.md.
# - Create "v1.0.x" git tag.
version = "1.19.2"
edition = "2018"
rust-version = "1.49"
authors = ["Tokio Contributors <team@tokio.rs>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/tokio-rs/tokio"
homepage = "https://tokio.rs"
description = """
An event-driven, non-blocking I/O platform for writing asynchronous I/O
backed applications.
"""
categories = ["asynchronous", "network-programming"]
keywords = ["io", "async", "non-blocking", "futures"]

[features]
# Include nothing by default
default = []

# enable everything
full = [
  "fs",
  "io-util",
  "io-std",
  "macros",
  "net",
  "parking_lot",
  "process",
  "rt",
  "rt-multi-thread",
  "signal",
  "sync",
  "time",
]

fs = []
io-util = ["memchr", "bytes"]
# stdin, stdout, stderr
io-std = []
macros = ["tokio-macros"]
net = [
  "libc",
  "mio/os-poll",
  "mio/os-ext",
  "mio/net",
  "socket2",
  "winapi/std",
  "winapi/fileapi",
  "winapi/handleapi",
  "winapi/namedpipeapi",
  "winapi/winbase",
  "winapi/winnt",
]
process = [
  "bytes",
  "once_cell",
  "libc",
  "mio/os-poll",
  "mio/os-ext",
  "mio/net",
  "signal-hook-registry",
  "winapi/std",
  "winapi/handleapi",
  "winapi/processthreadsapi",
  "winapi/threadpoollegacyapiset",
  "winapi/winbase",
  "winapi/winnt",
]
# Includes basic task execution capabilities
rt = ["once_cell"]
rt-multi-thread = [
  "num_cpus",
  "rt",
]
signal = [
  "once_cell",
  "libc",
  "mio/os-poll",
  "mio/net",
  "mio/os-ext",
  "signal-hook-registry",
  "winapi/consoleapi",
  "winapi/wincon",
]
sync = []
test-util = ["rt", "sync", "time"]
time = []

# Technically, removing this is a breaking change even though it only ever did
# anything with the unstable flag on. It is probably safe to get rid of it after
# a few releases.
stats = []

[dependencies]
tokio-macros = { version = "1.7.0", path = "../tokio-macros", optional = true }

pin-project-lite = "0.2.0"

# Everything else is optional...
bytes = { version = "1.0.0", optional = true }
once_cell = { version = "1.5.2", optional = true }
memchr = { version = "2.2", optional = true }
mio = { version = "0.8.1", optional = true }
socket2 = { version = "0.4.4", optional = true, features = [ "all" ] }
num_cpus = { version = "1.8.0", optional = true }
parking_lot = { version = "0.12.0", optional = true }

# Currently unstable. The API exposed by these features may be broken at any time.
# Requires `--cfg tokio_unstable` to enable.
[target.'cfg(tokio_unstable)'.dependencies]
tracing = { version = "0.1.25", default-features = false, features = ["std"], optional = true } # Not in full

[target.'cfg(unix)'.dependencies]
libc = { version = "0.2.42", optional = true }
signal-hook-registry = { version = "1.1.1", optional = true }

[target.'cfg(windows)'.dependencies.winapi]
version = "0.3.8"
default-features = false

optional = true

[package.metadata.docs.rs]
all-features = true
# enable unstable features in the documentation
rustdoc-args = ["--cfg", "docsrs", "--cfg", "tokio_unstable"]
# it's necessary to _also_ pass `--cfg tokio_unstable` to rustc, or else
# dependencies will not be enabled, and the docs build will fail.
rustc-args = ["--cfg", "tokio_unstable"]

[package.metadata.playground]
features = ["full", "test-util"]
