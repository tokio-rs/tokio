jobs:
- job: ${{ parameters.name }}
  displayName: ${{ parameters.displayName }}
  strategy:
    matrix:
      Linux:
        vmImage: ubuntu-16.04

      ${{ if parameters.cross }}:
        MacOS:
          vmImage: macOS-10.14
        Windows:
          vmImage: vs2017-win2016
  pool:
    vmImage: $(vmImage)

  steps:
  - template: azure-install-rust.yml
    parameters:
      rust_version: stable

  - template: azure-is-release.yml

  - ${{ each crate in parameters.crates }}:
    - script: cargo test
      env:
        LOOM_MAX_DURATION: 10
        CI: 'True'
      displayName: cargo test -p ${{ crate }}
      workingDirectory: $(Build.SourcesDirectory)/${{ crate }}
      condition: and(succeeded(), ne(variables['isRelease'], 'true'))

  - template: azure-patch-crates.yml

  - ${{ each crate in parameters.crates }}:
    - script: cargo test
      env:
        LOOM_MAX_DURATION: 10
        CI: 'True'
      displayName: cargo test -p ${{ crate }} (PATCHED)
      workingDirectory: $(Build.SourcesDirectory)/${{ crate }}
