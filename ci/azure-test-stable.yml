jobs:
- job: ${{ parameters.name }}
  displayName: ${{ parameters.displayName }}
  strategy:
    matrix:
      Linux:
        vmImage: ubuntu-16.04

      ${{ if parameters.cross }}:
        MacOS:
          vmImage: macOS-10.13
        Windows:
          vmImage: vs2017-win2016
  pool:
    vmImage: $(vmImage)

  steps:
  - template: azure-install-rust.yml
    parameters:
      # rust_version: stable
      rust_version: ${{ parameters.rust }}

  - template: azure-is-release.yml

  - ${{ each crate in parameters.crates }}:
    # Run with default crate features
    - script: cargo test
      env:
        LOOM_MAX_PREEMPTIONS: 2
        CI: 'True'
      displayName: ${{ crate.key }} - cargo test
      workingDirectory: $(Build.SourcesDirectory)/${{ crate.key }}

    # Run with each specified feature
    - ${{ each feature in crate.value }}:
      - script: cargo test --no-default-features --features ${{ feature }}
        env:
          LOOM_MAX_PREEMPTIONS: 2
          CI: 'True'
        displayName: ${{ crate.key }} - cargo test --features ${{ feature }}
        workingDirectory: $(Build.SourcesDirectory)/${{ crate.key }}

  - template: azure-patch-crates.yml

  - ${{ each crate in parameters.crates }}:
    # Run with default crate features
    - script: cargo test
      env:
        LOOM_MAX_PREEMPTIONS: 2
        CI: 'True'
      displayName: ${{ crate.key }} - cargo test
      workingDirectory: $(Build.SourcesDirectory)/${{ crate.key }}

    # Run with each specified feature
    - ${{ each feature in crate.value }}:
      - script: cargo test --no-default-features --features ${{ feature }}
        env:
          LOOM_MAX_PREEMPTIONS: 2
          CI: 'True'
        displayName: ${{ crate.key }} - cargo test --features ${{ feature }}
        workingDirectory: $(Build.SourcesDirectory)/${{ crate.key }}
