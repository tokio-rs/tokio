jobs:
- job: ${{ parameters.name }}
  displayName: ${{ parameters.displayName }}
  strategy:
    matrix:
      Linux:
        vmImage: ubuntu-16.04

      ${{ if parameters.cross }}:
        MacOS:
          vmImage: macOS-10.13
        Windows:
          vmImage: vs2017-win2016
  pool:
    vmImage: $(vmImage)

  steps:
  - template: azure-install-rust.yml
    parameters:
      rust_version: ${{ parameters.rust }}

  - template: azure-is-release.yml

  - ${{ each crate in parameters.crates }}:
    # Run with all crate features
    - script: cargo test --all-features
      env:
        LOOM_MAX_PREEMPTIONS: 2
        CI: 'True'
      displayName: ${{ crate }} - cargo test --all-features
      workingDirectory: $(Build.SourcesDirectory)/${{ crate }}

    # Check benches
    - script: cargo check --all-features --benches
      displayName: ${{ crate }} - cargo check --benches
      workingDirectory: $(Build.SourcesDirectory)/${{ crate }}

  - template: azure-patch-crates.yml

  - ${{ each crate in parameters.crates }}:
    # Run with all crate features
    - script: cargo test --all-features
      env:
        LOOM_MAX_PREEMPTIONS: 2
        CI: 'True'
      displayName: ${{ crate }} - cargo test --all-features
      workingDirectory: $(Build.SourcesDirectory)/${{ crate }}
