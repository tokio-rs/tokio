trigger: ["master", "std-future"]
pr: ["master", "std-future"]

variables:
  nightly: nightly-2019-08-10
  RUSTFLAGS: -Dwarnings

jobs:
# Check formatting
- template: ci/azure-rustfmt.yml
  parameters:
    rust: $(nightly)
    name: rustfmt

# Apply clippy lints to all crates
- template: ci/azure-clippy.yml
  parameters:
    rust: $(nightly)
    name: clippy

# Test top level crate
- template: ci/azure-test-stable.yml
  parameters:
    name: test_tokio
    rust: $(nightly)
    displayName: Test tokio
    cross: true
    crates:
      tokio:
        - codec
        - fs
        - io
        - rt-full
        - net
        - sync
        - tcp
        - timer
        - udp
        - uds

# Test crates that are platform specific
- template: ci/azure-test-stable.yml
  parameters:
    name: test_sub_cross
    displayName: Test sub crates (cross) -
    cross: true
    rust: $(nightly)
    crates:
      tokio-fs: []
      tokio-net:
        - tcp
        - udp
      tokio-process: []
      tokio-signal: []
      tokio-uds:
        - async-traits

# Test crates that are NOT platform specific
- template: ci/azure-test-stable.yml
  parameters:
    name: test_linux
    displayName: Test sub crates -
    rust: $(nightly)
    crates:
      tokio-buf: []
      tokio-codec: []
      tokio-executor:
        - current-thread
        - threadpool
      tokio-io:
        - util
      tokio-sync:
        - async-traits
      tokio-macros: []
      tokio-timer:
        - async-traits
      tokio-test: []

# Test compilation failure
- template: ci/azure-test-stable.yml
  parameters:
    name: test_features
    displayName: Test feature flags
    rust: $(nightly)
    crates:
      ui-tests:
        - tokio-executor
        - tokio-net
        - executor-without-current-thread
        - net-no-features
        - net-with-tcp
        - net-with-udp
        - tokio-no-features
        - tokio-with-net

# # Try cross compiling
# - template: ci/azure-cross-compile.yml
#   parameters:
#     name: cross_32bit_linux
#     target: i686-unknown-linux-gnu
#
# # This represents the minimum Rust version supported by
# # Tokio. Updating this should be done in a dedicated PR and
# # cannot be greater than two 0.x releases prior to the
# # current stable.
# #
# # Tests are not run as tests may require newer versions of
# # rust.
# - template: ci/azure-check-minrust.yml
#   parameters:
#     name: minrust
#     rust_version: 1.34.0
#
# - template: ci/azure-tsan.yml
#   parameters:
#     name: tsan
#     rust: $(nightly)
#
# - template: ci/azure-deploy-docs.yml
#   parameters:
#     dependsOn:
#       - rustfmt
#       - test_tokio
#       - test_sub_cross
#       - test_linux
#       - features
#       - test_nightly
#       - cross_32bit_linux
#       - minrust
#       - tsan
